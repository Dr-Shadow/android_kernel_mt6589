/********************************************************************************************
*     LEGAL DISCLAIMER 
*
*     (Header of MediaTek Software/Firmware Release or Documentation)
*
*     BY OPENING OR USING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES 
*     THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE") RECEIVED 
*     FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON AN "AS-IS" BASIS 
*     ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES, EXPRESS OR IMPLIED, 
*     INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR 
*     A PARTICULAR PURPOSE OR NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY 
*     WHATSOEVER WITH RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, 
*     INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK 
*     ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*     NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S SPECIFICATION 
*     OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*     
*     BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE LIABILITY WITH 
*     RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, 
*     TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE 
*     FEES OR SERVICE CHARGE PAID BY BUYER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*     
*     THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE WITH THE LAWS 
*     OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF LAWS PRINCIPLES.  
************************************************************************************************/
#ifndef _VDEC_DRV_FILEIO_H_
#define _VDEC_DRV_FILEIO_H_

typedef struct _FilterInfo_T
{
  UINT32 u4WrIdx;                       ///< [OUT] interface handle
  UINT32 u4Handle;                       ///< [OUT] interface handle
  Filter_OpIf* pprFilterOpIf;
}Filter_Info;

typedef struct TScriptData
{
  UCHAR *pbTargetAddr;
  UCHAR *pbRecAddr;
  UCHAR *pbFileName;
  UINT32 dwFileLength;
  UINT32 dwRealGetBytes;
}TScriptData;


#if defined(MPV_NO_PARSER) || defined(MPV_READ_FILE)
#ifndef VDEC_SR_SUPPORT
#define V_FIFO_SZ 0x00400000 //80*1024*1024
#else
#define V_FIFO_SZ 0x00320000 //80*1024*1024  //only for SR
#endif
#endif

UINT32 u4BreakPoint4Read(UCHAR* pucFileName, UINT32 u4StartAddr);
void vBreakPoint4Write(UCHAR* pucFileName, UINT32 u4StartAddr, UINT32 u4FileSize);

#if defined(MPV_NO_PARSER) || defined(MPV_READ_FILE)
void VDec_Load_Data(UCHAR ucEsId);
void VDec_Load_MPEG4_Data(UCHAR ucEsId);
void VDec_Load_H264_Data(UCHAR ucEsId, BOOL fgDepView);
#endif

#if defined(MPV_NO_PARSER) || defined(MPV_DUMP_FBUF)
void VDec_Dump_Data(UINT32 u4StartAddr, UINT32 u4FileSize, UINT32 u4FileCnt, UCHAR* pucAddStr);
#endif

#endif
